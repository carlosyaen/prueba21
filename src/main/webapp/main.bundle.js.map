{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/polyfills.ts?5d2d"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 181;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 181\n// module chunks = 1","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component,ElementRef, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {IntervalObservable} from 'rxjs/observable/IntervalObservable';\nimport {Observable} from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  //private successList:Job[]=[new Job(1,\"SleepBuilder\"),new Job(2, \"Monitor\")];\n  private AllJobsURL: string[] = [];\n  private AllBuildsURL: string [] = [];\n  private finalURL = \"api/json?pretty=true\";\n  private URL;\n  private successList: Job[] = [];\n  private failureList:Job[]=[];\n  private brokenList: Job [] = [];\n  private urlJenkins: string;\n\n  constructor(elm: ElementRef, private http: Http){\n    this.urlJenkins = elm.nativeElement.getAttribute(\"urlJenkins\");\n}\n\n  title = 'Jenkins Infrastructure Monitor'; \n  title2 = 'Stable Jobs'; \n  title3 = 'Broken Jobs';\n  title4 = 'Semistable Jobs';\n\n\n     /*\n     getAllTheJobs(){\n      this.successList = [];\n      this.failureList = [];\n      this.brokenList = [];\n\t\tthis.http.get(this.urlJenkins + this.finalURL).subscribe(\n\t\t\t\tresponse => {\n\t\t\t\t\tlet data = response.json();\n\t\t\t\t\tfor (var i = 0; i < data.jobs.length; i++){\n\t\t\t\t\t\tthis.http.get(data.jobs[i].url + this.finalURL).subscribe(\n\t\t\t\t\t\t\t\tresponse => {\n\t\t\t\t\t\t\t\t\tlet data2 = response.json();\n                  let jobsAux: Job[] = [];\n                  var jobsAux2: Job[] = [];\n                  var init;\n                  if (data2.builds.length < 10){\n                    init = data2.builds.length - 1;\n                  }else{\n                    init = 9;\n                  }\n                  console.log(init);\n                  for (var j = init; j >= 0; j--){\n                  this.http.get(data2.builds[j].url + this.finalURL).subscribe(response => {\n                      //console.log(data2.builds);\n                      let data3 = response.json();\n                      jobsAux.push(new Job(data3.fullDisplayName, data3.result, data2.url, data3.number));\n                      jobsAux2.push(new Job(data3.fullDisplayName, data3.result, data2.url, data3.number));\n                      \n                    }, error => console.error(error));\n\t\t\t\t\t\t\t\n                  }\n                  console.log(jobsAux);\n                  console.log(\"1: \" + jobsAux.length + \" 2: \" + jobsAux2.length);\n  \n        var lastOneResult:string=\"\";\n        var lastOneNumber:number=0;\n        var numOfFails: number=0;\n\n        for (let jA of jobsAux){\n          console.log(jA);\n                }\n        for (var x=0; x<data2.builds.length; x++){\n          if(lastOneNumber < jobsAux[x].number){\n            lastOneResult = jobsAux[x].result;\n            console.log(\"pasa por aqui 1\");\n          }\n          if (jobsAux[x].result==\"FAILURE\"){\n            numOfFails=numOfFails+1;\n            console.log(\"pasa por aqui 2\");\n          }\n                }\n        //console.log(numOfFails);\n        //console.log(jobsAux.length);\n        //console.log(numOfFails/jobsAux.length);\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terror =>console.error(error)\n\t\t\t\t\t\t\t\t);\n                }\n\t\t\t\t\t},\n\t\t\t\t\terror => console.error(error)\n\t\t\t\t);\n        }\n*/\n   ngOnInit(){ \n     this.getAllTheJobs();\n     IntervalObservable.create(50000).subscribe(response => {\n        this.getAllTheJobs();\n     });\n\n   }\n/* EL INTENTO FALLIDO DE LAS PROMESAS\ngetAllTheJobs(){\nvar firstMethod = function(arrayURL,http,finURL) {\n   var promise = new Promise(function(resolve, reject){\n         \n        for(var i = 0; i < arrayURL.length; i++){\n         http.get(arrayURL[i].url + finURL).subscribe(\n           response => {\n             let data2 = response.json();\n             console.log(\"estoy en el primer metodo\");\n             //mierda = data2.builds;\n             //console.log(response);\n           },\n         );\n        }\n         resolve({dataSend: \"Estoy en el segundo método\"});\n   });\n   return promise;\n};\n\nvar secondMethod = function(someStuff) {\n   var promise = new Promise(function(resolve, reject){\n         //console.log(\"estoy en el segundo metodo\");\n         console.log(someStuff.dataSend);\n         resolve({newData: someStuff.data + ' some more data'});\n   });\n   return promise;\n};\n\n\n\n// this.http.get(this.urlJenkins + this.finalURL).subscribe(\n// response => {\n// let data = response.json();\n// let datajobs = data.jobs;\n// firstMethod(datajobs, this.http, this.finalURL).then(secondMethod);\n\nthis.http.get(this.urlJenkins + this.finalURL).flatMap(\nresponse => {\nlet data = response.json();\nlet datajobs = data.jobs;\n  return this.http.get(datajobs[0].url + this.finalURL);\n    },\n).subscribe(result2 => {\n  let data2 = result2.json();\n  console.log(data2.builds);\n},\n);\n\n\n}*/\n\n\ngetJson(TheURL: string) {\n\n\n   return new Promise(function(resolve, reject){\n         this.http.get(TheURL + this.finalURL).map(response => response.json());\n         resolve({newData: this.http.get(TheURL + this.finalURL).map(response => response.json())});\n   });\n\n\n  \n  //return new Promise (this.http.get(TheURL + this.finalURL)).then(response => response.json());\n}\n/*  EL BUENO PERO QUE LO HACE MAL\n    getAllTheJobs(){\n      this.successList = [];\n      this.failureList = [];\n      this.brokenList = [];\n    this.http.get(this.urlJenkins + this.finalURL).subscribe(\n\t\t\t\tresponse => {\n\t\t\t\t\tlet data = response.json();\n\t\t\t\t\tfor (var i = 0; i < data.jobs.length; i++){\n\t\t\t\t\t\tthis.http.get(data.jobs[i].url + this.finalURL).subscribe(\n\t\t\t\t\t\t\t\tresponse => {\n\t\t\t\t\t\t\t\t\tlet data2 = response.json();\n                  let numberOfFails: number = 0;\n                  var init;\n\t\t\t\t\t\t\t\t\tif (data2.builds.length < 10){\n\t\t\t\t\t\t\t\t\t\tinit = data2.builds.length-1;\n\t\t\t\t\t\t\t\t\t} else {\n                    init = 9;\n                  }\n                  for (var j = init; j >= 1; j--){\n                    console.log(\"Iteracion \" + j + \" numberOfFails \" + numberOfFails);\n                 this.http.get(data2.builds[j].url + this.finalURL).subscribe(response => {\n                      //console.log(data2.builds);\n                      let data3 = response.json();\n                      console.log(data3);\n                      if(data3.result == \"FAILURE\"){\n                        numberOfFails = numberOfFails+1;\n                      }\n                    }, error => console.error(error));\n                  }\n                  //console.log(this.failureList);\n\t\t\t\t\t\t\t    this.http.get(data2.builds[0].url + this.finalURL).subscribe(response => {\n                    let data3 = response.json();\n                    if (data3.result == \"FAILURE\"){\n                      numberOfFails = numberOfFails + 1;\n                    }\n                    let average = numberOfFails/(init+1);\n                    console.log(numberOfFails +\" \" + init+1 + \" \" +average);\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data3.fullDisplayName, data3.result,data2.url, average));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data3.fullDisplayName, data3.result, data2.url, average));\n                    }else {\n                      this.failureList.push(new Job (data3.fullDisplayName, data3.result, data2.url, average));\n                    }\n            }, error => console.error(error));\n                  \n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terror =>console.error(error)\n\t\t\t\t\t\t\t\t);\n                }\n\t\t\t\t\t},\n\t\t\t\t\terror => console.error(error)\n\t\t\t\t);\n        //console.log(this.resultado);\n        //console.log(this.brokenList);\n        //console.log(this.successList);\n        }*/\n\n\ngetAllTheJobs(){\nthis.successList = [];\n      this.failureList = [];\n      this.brokenList = [];\n    this.http.get(this.urlJenkins + this.finalURL).subscribe(\n\t\t\t\tresponse => {\n\t\t\t\t\tlet data = response.json();\n\t\t\t\t\tfor (var i = 0; i < data.jobs.length; i++){\n\t\t\t\t\t\tthis.http.get(data.jobs[i].url + this.finalURL).subscribe(\n\t\t\t\t\t\t\t\tresponse => {\n\t\t\t\t\t\t\t\t\tlet data2 = response.json();\n                  //let numberOfFails: number = 0;\n\n                  if (data2.builds.length==1){\n                    console.log(\"debería meterse por aqui\");\n                                      var source1 = Observable.forkJoin(\n                  this.http.get(data2.builds[0].url + this.finalURL)\n                  );\n                    var subscription = source1.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                } else if (data2.builds.length ==2){\n\n                  var source2 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL)\n                  );\n\n\n                    console.log(\"acaso se está metiendo por aqui el hijo de puta?\");\n                    var subscription = source2.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==3){\n                                      var source3 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL)\n                  );\n                    var subscription = source3.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==4){\n                                      var source4 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL)\n                  );\n                    var subscription = source4.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==5){\n                                      var source5 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL),\n                    this.http.get(data2.builds[4].url + this.finalURL)\n                  );\n                    var subscription = source5.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==6){\n                                      var source6 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL),\n                    this.http.get(data2.builds[4].url + this.finalURL),\n                    this.http.get(data2.builds[5].url + this.finalURL)\n                  );\n                    var subscription = source6.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==7){\n                                      var source7 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL),\n                    this.http.get(data2.builds[4].url + this.finalURL),\n                    this.http.get(data2.builds[5].url + this.finalURL),\n                    this.http.get(data2.builds[6].url + this.finalURL)                    \n                  );\n                    var subscription = source7.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==8){\n                                      var source8 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL),\n                    this.http.get(data2.builds[4].url + this.finalURL),\n                    this.http.get(data2.builds[5].url + this.finalURL),\n                    this.http.get(data2.builds[6].url + this.finalURL),\n                    this.http.get(data2.builds[7].url + this.finalURL)\n                  );\n                    var subscription = source8.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  } else if (data2.builds.length==9){\n                                      var source9 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL),\n                    this.http.get(data2.builds[4].url + this.finalURL),\n                    this.http.get(data2.builds[5].url + this.finalURL),\n                    this.http.get(data2.builds[6].url + this.finalURL),\n                    this.http.get(data2.builds[7].url + this.finalURL),\n                    this.http.get(data2.builds[8].url + this.finalURL)\n                  );\n                    var subscription = source9.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  }else if (data2.builds.length >=10){\n                                      var source10 = Observable.forkJoin(\n                    this.http.get(data2.builds[0].url + this.finalURL),\n                    this.http.get(data2.builds[1].url + this.finalURL),\n                    this.http.get(data2.builds[2].url + this.finalURL),\n                    this.http.get(data2.builds[3].url + this.finalURL),\n                    this.http.get(data2.builds[4].url + this.finalURL),\n                    this.http.get(data2.builds[5].url + this.finalURL),\n                    this.http.get(data2.builds[6].url + this.finalURL),\n                    this.http.get(data2.builds[7].url + this.finalURL),\n                    this.http.get(data2.builds[8].url + this.finalURL),\n                    this.http.get(data2.builds[9].url + this.finalURL)\n                  );\n                    var subscription = source10.subscribe(\n   (x) => {\n    let numberOfFails = 0;\n    let contador = 0;\n    let idLastBuild = 0;\n    let numberLastBuild = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      if (data.number > numberLastBuild){\n        idLastBuild = i;\n        numberLastBuild = data.number;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n    let data = x[idLastBuild].json();\n\n                    if (average <= 0.1){\n                      this.successList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    } else if (average<0.8){\n                      this.brokenList.push(new Job(data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }else {\n                      this.failureList.push(new Job (data.fullDisplayName, data.result, data2.url, data.url, data.number));\n                    }\n\n\n  },\n  function (err) {\n    console.log('Error: %s', err);\n  },\n  function () {\n    console.log('Completed');\n  });\n                  }\n  \n\n              \n                  \n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terror =>console.error(error)\n\t\t\t\t\t\t\t\t);\n                }\n\t\t\t\t\t},\n\t\t\t\t\terror => console.error(error)\n\t\t\t\t);\n        //console.log(this.resultado);\n        //console.log(this.brokenList);\n        //console.log(this.successList);\n\n\n\n/*\n\n  var source = Observable.forkJoin(\n  this.http.get(\"http://localhost:8080/jenkins/job/Mal/7/api/json?pretty=true\"),\n  this.http.get(\"http://localhost:8080/jenkins/job/Mal/6/api/json?pretty=true\"),\n  this.http.get(\"http://localhost:8080/jenkins/job/Mal/5/api/json?pretty=true\"),\n  this.http.get(\"http://localhost:8080/jenkins/job/Mal/12/api/json?pretty=true\")\n //Your http calls will be here instead\n);\n\nvar subscription = source.subscribe(\n  function (x) {\n    let numberOfFails = 0;\n    let contador = 0;\n    for(var i = 0; i < x.length; i++ ){\n      let data = x[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      //console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n  },\n  function (err) {\n    let numberOfFails = 0;\n    let contador = 0;\n    console.log(err.length);\n    for(var i = 0; i < err.length; i++ ){\n      let data = err[i].json();\n      contador++;\n      if (data.result === \"FAILURE\"){\n        numberOfFails++;\n      }\n      console.log(data.result);\n    }\n    let average = numberOfFails/contador;\n    console.log(numberOfFails + \" \" + contador);\n    console.log(average);\n  },\n  function () {\n    console.log('Completed');\n  });*/\n\n// => Next: [42, 9, 3, 56]\n}\n    \nisFailure(d: string){\n  return (d==\"FAILURE\");\n}\n\n}\n\n\nexport class Job {\n\n\n  constructor(public name:string, public result: string, public urlJob: string, public urlBuild:string, public number: number){\n\n  }\n\n\n     \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"header{\\n    background: #2c3350;\\n    color:#fff;\\n}\\n\\n.main {\\n    background: #f2f2f2;\\n}\\n\\n.color1 {\\n    background: #28a928;\\n    color: #fff;\\n}\\n\\n.color2 {\\n    background: #ff2828;\\n    color: #fff;\\n}\\n\\nfooter {\\n    background: #16a085;\\n    color: #fff;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 191\n// module chunks = 1","module.exports = \"\\n<head>\\n<!-- Latest compiled and minified CSS -->\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\" integrity=\\\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\\\" crossorigin=\\\"anonymous\\\">\\n\\n<!-- Optional theme -->\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\\\" integrity=\\\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\\\" crossorigin=\\\"anonymous\\\">\\n\\n<!-- Latest compiled and minified JavaScript -->\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\" integrity=\\\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\\\" crossorigin=\\\"anonymous\\\"></script>\\n</head>\\n\\n<header>\\n  <div class=\\\"container\\\">\\n    <h1>{{title}}</h1>\\n  </div>\\n</header>\\n\\n\\n<body>\\n<div class = \\\"container\\\">\\n  \\n  <button (click)=\\\"getAllTheJobs()\\\">\\n    Buscar\\n  </button>\\n\\n\\n  <div class=\\\"main\\\">\\n    <div id=\\\"listaExitos\\\" class=\\\"main col-md-4\\\">\\n      <h3>\\n        {{title2}}\\n      </h3>\\n      <li *ngFor=\\\"let job of successList\\\">\\n        <div *ngIf=\\\"isFailure(job.result)\\\" class=\\\"color2\\\">\\n          <a href=\\\"{{job.urlJob}}\\\"><font color=white>{{job.name}}</font></a> , {{job.result}} , <a href=\\\"{{job.urlBuild}}\\\"><font color=white>{{job.number}}</font></a>\\n        </div>\\n        <div *ngIf=\\\"!isFailure(job.result)\\\" class=\\\"color1\\\">\\n          <a href=\\\"{{job.urlJob}}\\\"> <font color=white>{{job.name}}</font></a> , {{job.result}} , <a href=\\\"{{job.urlBuild}}\\\"><font color=white>{{job.number}}</font></a>\\n        </div>\\n      </li>\\n    </div>\\n\\n    <div id=\\\"listaFallosRepentinos\\\" class=\\\"main col-md-4\\\">\\n      <h3>\\n        {{title4}}\\n      </h3>\\n      <li *ngFor=\\\"let job of brokenList\\\">\\n        <div *ngIf=\\\"isFailure(job.result)\\\" class=\\\"color2\\\">\\n          <a href=\\\"{{job.urlJob}}\\\"><font color=white>{{job.name}}</font></a> , {{job.result}} , <a href=\\\"{{job.urlBuild}}\\\"><font color=white>{{job.number}}</font></a>\\n        </div>\\n        <div *ngIf=\\\"!isFailure(job.result)\\\" class=\\\"color1\\\">\\n          <a href=\\\"{{job.urlJob}}\\\"><font color=white>{{job.name}}</font></a> , {{job.result}} , <a href=\\\"{{job.urlBuild}}\\\"><font color=white>{{job.number}}</font></a>\\n        </div>\\n      </li>\\n    </div>\\n\\n    <div id=\\\"listaFallos\\\" class=\\\"main col-md-4\\\">\\n      <h3>\\n        {{title3}}\\n      </h3>\\n      <li *ngFor=\\\"let job of failureList\\\">\\n        <div *ngIf=\\\"isFailure(job.result)\\\" class=\\\"color2\\\">\\n          <a href=\\\"{{job.urlJob}}\\\"><font color=white>{{job.name}}</font></a> , {{job.result}} , <a href=\\\"{{job.urlBuild}}\\\"><font color=white>{{job.number}}</font></a>\\n        </div>\\n        <div *ngIf=\\\"!isFailure(job.result)\\\" class=\\\"color1\\\">\\n          <a href=\\\"{{job.urlJob}}\\\"><font color=white>{{job.name}}</font></a> , {{job.result}} , <a href=\\\"{{job.urlBuild}}\\\"><font color=white>{{job.number}}</font></a>\\n        </div>\\n      </li>\\n    </div>\\n\\n    \\n  </div>\\n</div>\\n\\n<!-- Latest compiled and minified CSS -->\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\" integrity=\\\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\\\" crossorigin=\\\"anonymous\\\">\\n\\n<!-- Optional theme -->\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\\\" integrity=\\\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\\\" crossorigin=\\\"anonymous\\\">\\n\\n<!-- Latest compiled and minified JavaScript -->\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\" integrity=\\\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\\\" crossorigin=\\\"anonymous\\\"></script>\\n</body>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 192\n// module chunks = 1","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\nimport 'core-js/es6/reflect';\nimport 'core-js/es7/reflect';\n\n\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts"],"sourceRoot":""}